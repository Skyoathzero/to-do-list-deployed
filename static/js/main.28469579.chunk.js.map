{"version":3,"sources":["task.js","App.js","reportWebVitals.js","index.js"],"names":["Task","second","taskName","time","color","id","deleteTask","index","editTask","changeListPosition","useCountDown","split","parseTime","timeLeft","start","pause","resume","reset","useState","timerStart","setTimerStart","timerFirstStart","setTimerFirstStart","className","style","backgroundColor","Date","toISOString","substr","onClick","App","tasks","setTasks","task","setTask","isEditing","setIsEditing","editId","setEditId","handleChange","e","name","target","value","newTasks","filter","console","log","targetItem","find","newIndex","length","lengthx","initialItem","initialPos","indexOf","targetArr","map","checkIfHex","hex","test","checkTimeFormat","onSubmit","preventDefault","oldtask","newTask","getTime","toString","type","onChange","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28469579.chunk.js","sourcesContent":["import React ,{useEffect,useState}from 'react'\r\nimport {FaRegEdit} from 'react-icons/fa';\r\nimport {AiOutlineDelete,AiFillCaretUp,AiFillCaretDown,AiFillPauseCircle,AiFillCaretRight} from 'react-icons/ai';\r\nimport useCountDown from 'react-countdown-hook';\r\n\r\nfunction Task({taskName,\r\n    time,\r\n    color,\r\n    id,\r\n    deleteTask,\r\n    index,\r\n    editTask,\r\n    changeListPosition}) {\r\n\r\n        \r\n    const parseTime = (time) =>{\r\n        const[hour, minute, second] = time.split(':');\r\n        const sec = (+hour) * 60 * 60 + (+minute) * 60 + (+second); \r\n        return sec\r\n    }\r\n\r\n    const [timeLeft, { start, pause, resume, reset }] = useCountDown(parseTime(time)*1000)\r\n\r\n    const parseSeconds = (second) =>{return new Date(second).toISOString().substr(11, 8)}\r\n\r\n    const[timerStart,setTimerStart]=useState(true)\r\n    const[timerFirstStart,setTimerFirstStart]=useState(true)\r\n    const handleClick = () =>{\r\n        if(timerFirstStart===true){\r\n            start()\r\n            setTimerFirstStart(false)\r\n        }\r\n        else if(timerStart===true){\r\n            pause()\r\n            setTimerStart(!timerStart)\r\n        }\r\n        else{resume();\r\n            setTimerStart(!timerStart)\r\n        }\r\n    }\r\n    return (<>\r\n        <div className=\"task-object\">\r\n            <div className=\"task\">\r\n                <span className=\"dot\" style={{backgroundColor:`${color}`}}></span>\r\n                <h1>{taskName}</h1>\r\n                <p>{parseSeconds(timeLeft)}</p>\r\n            </div>\r\n            <div className=\"task-btn-container\">\r\n                <button className=\"timer-control\" onClick={() => handleClick()}>{timerStart?<AiFillPauseCircle/>:<AiFillCaretRight/>}</button>\r\n                <div className=\"pos-btn\">\r\n                    <button className=\"pos-up\" onClick={() =>{changeListPosition(id,index-1)}}><AiFillCaretUp/></button>\r\n                    <button className=\"pos-down\" onClick={() =>{changeListPosition(id,index+1)}}><AiFillCaretDown/></button>\r\n                </div>\r\n                <button className=\"edit-btn\" onClick={()=>{editTask(id);}}><FaRegEdit/></button>\r\n                <button className=\"delete-btn\" onClick={() =>{deleteTask(id)}}><AiOutlineDelete/></button>\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React ,{useState} from 'react'\r\nimport Task from './task'\r\n\r\nfunction App() {\r\n    // {'taskName':'a','time':'s','color':'s','id':'24'},{'taskName':'as','time':'s','color':'s','id':'23'}\r\n\r\n    const [tasks, setTasks] = useState([])\r\n    const [task, setTask] = useState({'taskName':'','time':'','color':''})\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [editId, setEditId] = useState(null)\r\n\r\n    const handleChange = (e)=>{\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        setTask({...task, [name]:value})\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(task.taskName && checkTimeFormat(task.time) && checkIfHex(task.color) && isEditing){\r\n            const newTasks = tasks.map((oldtask)=>{\r\n                if(oldtask.id === editId){\r\n                    const{taskName,time,color} = task\r\n                    return {...oldtask,'taskName':taskName,'time':time,'color':color}\r\n                }return oldtask\r\n            })\r\n            setTasks(newTasks)\r\n            setIsEditing(false)\r\n            setEditId(null)\r\n            setTask({'taskName':'','time':'','color':''})\r\n        }\r\n        else if(task.taskName && checkTimeFormat(task.time) && checkIfHex(task.color)){\r\n            const newTask = {...task,id:new Date().getTime().toString()}\r\n            setTasks((tasks)=>[...tasks,newTask])\r\n            setTask({'taskName':'','time':'','color':''})\r\n        }\r\n        else if(task.taskName && task.time && !checkIfHex(task.color)){\r\n            const newTask = {...task,id:new Date().getTime().toString(),'color':'black'}\r\n            setTasks((tasks)=>[...tasks,newTask])\r\n            setTask({'taskName':'','time':'','color':''})\r\n        }\r\n    }\r\n\r\n    const deleteTask = (id) =>{\r\n        const newTasks = tasks.filter((task)=> task.id !== id)\r\n        console.log(newTasks)\r\n        setTasks(newTasks)\r\n    }\r\n\r\n    const editTask = (id) =>{\r\n        const targetItem = tasks.find((task)=>task.id === id)\r\n        setIsEditing(true)\r\n        setEditId(id)\r\n        setTask({'taskName':targetItem.taskName,\r\n                'time':targetItem.time,\r\n                'color':targetItem.color})}\r\n\r\n    const changeListPosition = (id,newIndex) =>{\r\n        let index = newIndex\r\n        let targetItem = null\r\n        if(newIndex>=tasks.length){\r\n            targetItem = tasks[0]\r\n            index = 0\r\n        }\r\n        else if(newIndex<0){\r\n            targetItem = tasks[tasks.length-1]\r\n            index =tasks.lengthx-1\r\n        }\r\n        else{targetItem = tasks[index]}\r\n\r\n        const initialItem = tasks.find((task)=>task.id === id)\r\n        \r\n        const initialPos = tasks.indexOf(initialItem)\r\n        let targetArr = tasks.map((task)=>task)\r\n        targetArr[index] = initialItem\r\n        targetArr[initialPos] = targetItem\r\n        setTasks(targetArr)\r\n    }\r\n    const checkIfHex=(hex)=>{\r\n        const re = /^(#[a-f0-9]{6}|#[a-f0-9]{3}|rgb *\\( *[0-9]{1,3}%? *, *[0-9]{1,3}%? *, *[0-9]{1,3}%? *\\)|rgba *\\( *[0-9]{1,3}%? *, *[0-9]{1,3}%? *, *[0-9]{1,3}%? *, *[0-9]{1,3}%? *\\)|black|green|silver|gray|olive|white|yellow|maroon|navy|red|blue|purple|teal|fuchsia|aqua)$/i\r\n        if(re.test(hex)){\r\n            return true\r\n        }\r\n        else{return false}\r\n    }\r\n    const checkTimeFormat = (time) =>{\r\n        const re = /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/\r\n        if (re.test(time)) {\r\n            return true\r\n        }\r\n        else{return false}\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"input-container\">\r\n                <form className=\"input-form\" onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className=\"btn \">{isEditing?'Edit Task':'Add Task'}</button>\r\n                    <div className=\"form-control\">\r\n                        <input type=\"text\" \r\n                        id='taskName'\r\n                        name='taskName'\r\n                        value={task.taskName}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Task Name\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <input type=\"text\" \r\n                        id='time'\r\n                        name='time'\r\n                        value={task.time}\r\n                        onChange={handleChange}\r\n                        placeholder=\"HH:MM:SS format\"/>\r\n\r\n                        <input type=\"text\" id='color'\r\n                        name='color'\r\n                        value={task.color}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Please enter a valid color/hex/rgb\"/>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n            <section className=\"list-container\">\r\n                {tasks.map((task,index) =>{\r\n                    const {taskName,time,color,id} = task;\r\n                    return(<Task key={index} \r\n                    taskName={taskName} \r\n                    time={time} \r\n                    color={color} \r\n                    id={id} \r\n                    deleteTask={deleteTask}\r\n                    editTask={editTask}\r\n                    index={index}\r\n                    changeListPosition={changeListPosition}\r\n                    />)\r\n                })}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}